#
# kbuild file for usr/ - including initramfs image and klibc
#

# klibc definitions - to be moved to top-level Makefile later
export KLIBCSRC := $(srctree)/$(src)/klibc
export KLIBCINC := $(srctree)/$(src)/include
export KLIBCOBJ := $(objtree)/$(obj)/klibc
CONFIG_KLIBC := 1

# Klibc binaries
ifdef CONFIG_KLIBC
klibc := -f $(srctree)/scripts/Kbuild.klibc obj

.PHONY: klibcdirs
$(obj)/initramfs_list: klibcdirs

klibcdirs: FORCE
	$(Q)$(MAKE) $(klibc)=$(src)/klibc
	$(Q)$(MAKE) $(klibc)=$(src)/kinit
	$(Q)$(MAKE) $(klibc)=$(src)/utils
	$(Q)$(MAKE) $(klibc)=$(src)/dash
	$(Q)$(MAKE) $(klibc)=$(src)/gzip
endif
subdir- := klibc kinit utils dash gzip


# Generate builtin.o based on initramfs_data.o
obj-y := initramfs_data.o

# initramfs_data.o contains the initramfs_data.cpio.gz image.
# The image is included using .incbin, a dependency which is not
# tracked automatically.
$(obj)/initramfs_data.o: $(obj)/initramfs_data.cpio.gz FORCE

#####
# Generate the initramfs cpio archive
# Following steps are executed:
# Create list of files to be included in archive (ramfs-filelist)
# If any of the files are newer than target generate new cpio archive

# Create cpio archive from filelist
hostprogs-y  := gen_init_cpio

# Files included in cpio archive (cpio archive is updated if
# any included files are newer than the cpio archive)
initramfs     := $(CONFIG_SHELL) $(srctree)/$(src)/gen_initramfs.sh
ramfs-input    = $(if $(filter-out "",$(CONFIG_INITRAMFS_SOURCE)), \
                      $(CONFIG_INITRAMFS_SOURCE),-d)
ramfs-filelist = $(shell $(initramfs) -l $(ramfs-input))

quiet_cmd_initfs = GEN     $@
      cmd_initfs = \
	$(initramfs) -o $@ \
	$(if $(CONFIG_INITRAMFS_ROOT_UID), -u $(CONFIG_INITRAMFS_ROOT_UID)) \
	$(if $(CONFIG_INITRAMFS_ROOT_GID), -g $(CONFIG_INITRAMFS_ROOT_GID)) \
	$(ramfs-input)

targets := initramfs_data.cpio.gz
$(obj)/initramfs_data.cpio.gz: $(ramfs-filelist) $(obj)/gen_init_cpio FORCE
	$(call if_changed,initfs)

